// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/sensu/catalog-api/internal/api/catalog/v1

package catalogv1

import metav1 "github.com/sensu/catalog-api/internal/api/metadata/v1:metadatav1"

#Prompt: {
	type:   string @go(Type)
	name?:  string @go(Name)
	body?:  string @go(Body)
	title?: string @go(Title)
	input?: {...} @go(Input,map[string]interface{})
	required?: bool @go(Required)
}

#ResourcePatch: {
	resource: #ResourcePatchRef @go(Resource)
	patches: [... {...}] @go(Patches,[]map[string]interface{})
}

#ResourcePatchRef: {
	type:        string @go(Type)
	api_version: string @go(ApiVersion)
	name:        string @go(Name)
}

#PostInstall: {
	type:   string @go(Type)
	title?: string @go(Title)
	body?:  string @go(Body)
}

#Integration: {
	// Metadata omitempty hack: Meaningless to encoding/json in context of a struct field.
	// indicates to cuelang go importer that the metadata field may be missing from integration definition.
	metadata?:    metav1.#Metadata @go(Metadata)
	display_name: string           @go(DisplayName)
	class:        string           @go(Class)
	contributors: [...string] @go(Contributors,[]string)
	provider:          string @go(Provider)
	short_description: string @go(ShortDescription)
	supported_platforms: [...string] @go(SupportedPlatforms,[]string)
	tags: [...string] @go(Tags,[]string)
	prompts?: [...#Prompt] @go(Prompts,[]Prompt)
	resource_patches?: [...#ResourcePatch] @go(ResourcePatches,[]ResourcePatch)
	post_install?: [...#PostInstall] @go(PostInstall,[]PostInstall)
}
