// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/sensu/sensu-go/api/core/v2 --exclude=HealthResponse,Claims,Version

package v2

// CheckRequestType is the message type string for check request.
#CheckRequestType: "check_request"

// ChecksResource is the name of this resource type
#ChecksResource: "checks"

// DefaultSplayCoverage is the default splay coverage for proxy check requests
#DefaultSplayCoverage: 90.0

// NagiosOutputMetricFormat is the accepted string to represent the output metric format of
// Nagios Perf Data
#NagiosOutputMetricFormat: "nagios_perfdata"

// GraphiteOutputMetricFormat is the accepted string to represent the output metric format of
// Graphite Plain Text
#GraphiteOutputMetricFormat: "graphite_plaintext"

// OpenTSDBOutputMetricFormat is the accepted string to represent the output metric format of
// OpenTSDB Line
#OpenTSDBOutputMetricFormat: "opentsdb_line"

// InfluxDBOutputMetricFormat is the accepted string to represent the output metric format of
// InfluxDB Line
#InfluxDBOutputMetricFormat: "influxdb_line"

// PrometheusOutputMetricFormat is the accepted string to represent the output metric format of
// Prometheus Exposition Text Format
#PrometheusOutputMetricFormat: "prometheus_text"

// KeepaliveCheckName is the name of the check that is created when a
// keepalive timeout occurs.
#KeepaliveCheckName: "keepalive"

// RegistrationCheckName is the name of the check that is created when an
// entity sends a keepalive and the entity does not yet exist in the store.
#RegistrationCheckName: "registration"

// MemoryScheduler indicates that a check is scheduled in-memory.
#MemoryScheduler: "memory"

// EtcdScheduler indicates that a check is scheduled with etcd leases and
// watchers.
#EtcdScheduler: "etcd"

// PostgresScheduler indicates that a check is scheduled with postgresql,
// using transactions and asynchronous notification (NOTIFY).
#PostgresScheduler: "postgres"

// DEPRECATED, DO NOT USE! Events should be ordered FIFO.
// ByExecuted implements the sort.Interface for []CheckHistory based on the
// Executed field.
//
// Example:
//
// sort.Sort(ByExecuted(check.History))
#ByExecuted: [...#CheckHistory]
