// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/sensu/sensu-go/api/core/v2 --exclude=HealthResponse,Claims,Version

package v2

// Entity is the Entity supplying the event. The default Entity for any
// Event is the running Agent process--if the Event is sent by an Agent.
#Entity: _

// System contains information about the system that the Agent process
// is running on, used for additional Entity context.
#System: {
	hostname?:         string   @go(Hostname) @protobuf(1,bytes,opt,proto3)
	os?:               string   @go(OS) @protobuf(2,bytes,opt,proto3)
	platform?:         string   @go(Platform) @protobuf(3,bytes,opt,proto3)
	platform_family?:  string   @go(PlatformFamily) @protobuf(4,bytes,opt,json=platformFamily,proto3)
	platform_version?: string   @go(PlatformVersion) @protobuf(5,bytes,opt,json=platformVersion,proto3)
	network:           #Network @go(Network) @protobuf(6,bytes,opt,proto3)
	arch?:             string   @go(Arch) @protobuf(7,bytes,opt,proto3)
	arm_version?:      int32    @go(ARMVersion) @protobuf(8,varint,opt,json=armVersion,proto3)

	// LibCType indicates the type of libc the agent has access to (glibc, musl,
	// etc)
	libc_type: string @go(LibCType) @protobuf(9,bytes,opt,name=LibCType,proto3)

	// VMSystem indicates the VM system of the agent (kvm, vbox, etc)
	vm_system: string @go(VMSystem) @protobuf(10,bytes,opt,name=VMSystem,proto3)

	// VMRole indicates the VM role of the agent (host/guest)
	vm_role: string @go(VMRole) @protobuf(11,bytes,opt,name=VMRole,proto3)

	// CloudProvider indicates the public cloud the agent is running on.
	cloud_provider: string @go(CloudProvider) @protobuf(12,bytes,opt,name=CloudProvider,proto3)
	float_type?:    string @go(FloatType) @protobuf(13,bytes,opt,json=floatType,proto3)

	// Processes contains information about the local processes on the agent.
	processes: [...null | #Process] @go(Processes,[]*Process) @protobuf(14,bytes,rep,name=Processes,proto3)
}

// Process contains information about a local process.
#Process: {
	name: string @go(Name) @protobuf(1,bytes,opt,proto3)
}

// Network contains information about the system network interfaces
// that the Agent process is running on, used for additional Entity
// context.
#Network: {
	interfaces: [...#NetworkInterface] @go(Interfaces,[]NetworkInterface) @protobuf(1,bytes,rep,proto3)
}

// NetworkInterface contains information about a system network
// interface.
#NetworkInterface: {
	name?: string @go(Name) @protobuf(1,bytes,opt,proto3)
	mac?:  string @go(MAC) @protobuf(2,bytes,opt,proto3)
	addresses: [...string] @go(Addresses,[]string) @protobuf(3,bytes,rep,proto3)
}

// Deregistration contains configuration for Sensu entity de-registration.
#Deregistration: {
	handler?: string @go(Handler) @protobuf(1,bytes,opt,proto3)
}

#EntityFace: _

_#randyEntity: _
