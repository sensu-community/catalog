---
api_version: catalog/v1
type: Integration
metadata:
  namespace: sensu
  name: sensu-backend-monitoring
spec:
  class: supported # community, supported, enterprise, or partner
  provider: monitoring
  display_name: "Sensu Backend Monitoring"
  short_description: "Health checks for Sensu Backends"
  supported_platforms:
    - darwin
    - linux
    - windows
  tags:
    - sensu
    - postgres
    - postgresql
    - pgsql
    - database
  contributors:
    - "@sensu"
    - "@asachs01"
  prompts:
    - type: section
      title: Configure Sensu Backend Postgres Health Monitoring
    - type: markdown
      body: |
        Configure Sensu Backend Health API monitoring
    - type: question
      name: url
      required: false
      input:
        type: string
        title: Sensu Backend URL
        description: >-
          Please input the full path to your Sensu backend's `/health` endpoint (example: http://127.0.0.1:8080/health)
        format: url
        default: http://127.0.0.1:8080/health
    - type: question
      name: interval
      required: false
      input:
        type: integer
        title: Interval
        description: >-
          How often (in seconds) do you want to check the Sensu Enterprise datastore's health?
        default: 30
    - type: section
      title: Configure Sensu Subscriptions
    - type: markdown
      body: |
        Configure which Sensu Agent subscriptions this check should be run on.
    - type: question
      name: subscriptions
      input:
        type: array
        items:
          type: string
          title: Sensu Subscriptions
          ref: core/v2/entity/subscriptions
        default:
          - sensu-backend
    - type: section
      title: Pipeline Configuration
    - type: markdown
      body: |
        Configure one or more [pipelines] for processing {{integration_short_name}} data.

        [pipelines]: https://docs.sensu.io/sensu-go/latest/observability-pipeline/
    - type: question
      name: alert_pipeline
      required: false
      input:
        type: string
        title: Alert Pipeline
        description: >-
          How do you want to be alerted for failures detected by this pipeline (e.g. Slack or Microsoft Teams)?
        ref: core/v2/pipeline/metadata/name
        refFilter: .labels.provider == "alerts"
    - type: question
      name: incident_pipeline
      required: false
      input:
        type: string
        title: Incident Management Pipeline
        description: >-
          How do you want to process incidents for failures detected by this pipeline (e.g. Atlassian JIRA/ServiceDesk, or Pagerduty)?
        ref: core/v2/pipeline/metadata/name
        refFilter: .labels.provider == "incidents"
    - type: question
      name: metrics_pipeline
      required: false
      input:
        type: string
        title: Metrics Pipeline
        description: >-
          How do you want to process metrics collected by this integration?
        ref: core/v2/pipeline/metadata/name
        refFilter: .labels.provider == "metrics"
  resource_patches:
    - resource:
        api_version: core/v2
        type: CheckConfig
        name: sensu-backend-postgresql-health
      patches:
        - op: replace
          path: /spec/interval
          value: interval
        - op: replace
          path: /spec/command
          value: >-
            http-json
            --url {{ .annotations.check_postgresql_health_url | default "[[url]]"}}
            --query ".PostgresHealth.[0].Healthy"
            --expression "== true"
        - op: add
          path: /spec/pipelines/-
          value:
            api_version: "core/v2"
            type: "Pipeline"
            name: "[[metrics_pipeline]]"
        - op: add
          path: /spec/pipelines/-
          value:
            api_version: "core/v2"
            type: "Pipeline"
            name: "[[alert_pipeline]]"
        - op: add
          path: /spec/pipelines/-
          value:
            api_version: "core/v2"
            type: "Pipeline"
            name: "[[incident_pipeline]]"
        - op: replace
          path: /spec/subscriptions
          value: subscriptions

